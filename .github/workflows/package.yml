name: Build and Publish

on:
  push:
    branches: ['master']
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'src/**'
      - '.github/workflows/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-publish:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw, value=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Start Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: '{{ EVENT_PAYLOAD.repository.full_name }} build started'

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}   
          cache-from: type=gha
          cache-to: type=gha,mode=max  
      - uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ env.IMAGE_NAME }}:latest
          package-type: 'container'
          min-versions-to-keep: 2
          
      - name: Build Failure Discord Notification
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: '{{ EVENT_PAYLOAD.repository.full_name }} build failed'

      - name: Build Success Discord Notification
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: '{{ EVENT_PAYLOAD.repository.full_name }} build succeeded'

      