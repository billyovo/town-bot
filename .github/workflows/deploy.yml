name: Deploy to Cloud

on:
  workflow_run:
    workflows: ["Build and Publish"]
    types:
      - completed
  workflow_dispatch:

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Deploy Start Notification
              env:
                DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
              uses: Ilshidur/action-discord@master
              with:
                args: '{{ EVENT_PAYLOAD.repository.full_name }} deploy started'

            - name: create ssh settings
              shell: bash
              env:
                SSH_HOST: ${{ secrets.SSH_HOST }}
                SSH_USER: ${{ secrets.SSH_USER }}
                SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
                SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
              run: |
                mkdir -p ~/.ssh/ |
                echo "$SSH_PRIVATE_KEY" > ~/.ssh/prod.key |
                chmod 600 ~/.ssh/prod.key |
                cat >>~/.ssh/config <<END
                Host prod
                  HostName $SSH_HOST
                  User $SSH_USER
                  IdentityFile ~/.ssh/prod.key
                  StrictHostKeyChecking no
                END

            - name: Run SSH deploy
              shell: bash
              env:
                SERVER_DIRECTORY: ${{ vars.SERVER_DIRECTORY }}
                SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
              run: |
                ssh prod "cd $SERVER_DIRECTORY && echo $SSH_PASSWORD | sudo -S git fetch --depth=1 origin master:docker-compose.yaml |
                && echo $SSH_PASSWORD | sudo -S git checkout origin/master -- docker-compose.yaml |
                && echo $SSH_PASSWORD | sudo -S docker compose pull |
                && echo $SSH_PASSWORD | sudo -S docker compose down |
                && echo $SSH_PASSWORD | sudo -S docker compose up -d
                
            - name: Deploy Finish Notification
              env:
                DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
              uses: Ilshidur/action-discord@master
              with:
                args: '{{ EVENT_PAYLOAD.repository.full_name }} deploy finished'